pipeline{
agent any 

stages{

stage('clean and build'){
steps{
       sh 'mvn clean'
       sh 'mvn install'
}

}

stage("SonarQube analysis") {
       
            environment {
                scannerHome=tool 'sonar_scanner'
            }
            
        steps{
             withSonarQubeEnv(sonarqube) {
                  sh '${scannerHome}/bin/sonar-scanner -Dproject.settings=./sonar-project.properties'
              }
              
           }
          }
  
       
     stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
            
          }
       
       stage("slack notification")
       {
       slackSend channel: '#jenkins-pipeline-demo', color: 'good', message: 'slack ', teamDomain: 'simple-e0r4903', tokenCredentialId: 'jenkins-slack-integration'
       }
       
       
       
   stage('Nexus Artifact Upload') {
          steps{
             withCredentials([usernamePassword(credentialsId: 'nexus_credentials', passwordVariable: 'pass', usernameVariable: 'userId')]) {
            sh   'curl -F file=@target/demopipe-${BUILD_NUMBER}.war -u $userId:$pass http://ec2-18-224-155-110.us-east-2.compute.amazonaws.com:8081/nexus/content/repositories/devopstraining/freestyle/falcons/demopipe-${BUILD_NUMBER}.war'
             
             }}
          }

  stage('deploy'){
    steps{
    deploy adapters: [tomcat8(credentialsId: 'tomcat-credentials', path: '', url: 'http://13.59.212.1:8089')], contextPath: 'power', onFailure: false, war: '**/*.war'
    }
  }
  
}
}
